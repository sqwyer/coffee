import { type NextPage } from "next";
import { MouseEvent, createRef, useCallback, useEffect, useRef } from 'react';

import Head from "next/head";
// import Link from "next/link";
// import { signIn, signOut, useSession } from "next-auth/react";
import circle from "../../public/circle.png"
import coffee from "../../public/coffee.png"
import Image from "next/image"
import { Menu } from '@headlessui/react'

// icons
import LocalCafeIcon from '@mui/icons-material/LocalCafe';
import AutoAwesomeIcon from '@mui/icons-material/AutoAwesome';
import AccountCircleIcon from '@mui/icons-material/AccountCircle';

import { api } from "~/utils/api";
import { useState } from "react";

import { useLongPress } from 'use-long-press';

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const [orderModalState, setOrderModalState] = useState(false)
  const [orderType, setOrderType] = useState<string|null>(null)
  const orderRef = createRef<HTMLDivElement>()
  const [orderTop, setOrderTop] = useState(0);

  function showOrder(order: string) {
    setOrderModalState(true)
    setOrderType(order)
  }

  function closeOrder() {
    setOrderModalState(false)
    setOrderType(null)
  }

  const [enabled, setEnabled] = useState(true);
  const callback = useCallback((event: any) => {
    alert('Long pressed!');
  }, []);

  const bind = useLongPress(enabled ? callback : null, {
    onMove: (event: any) => {
      console.log(event.clientY)
    },
    cancelOutsideElement: true,
    threshold: 500
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="p-10 flex gap-5 flex-col overflow-hidden">
        <div className="grid grid-cols-2 gap-4">
          <p className="font-semibold text-sm text-left">Good afternoon, Jeffery</p>
          <p className="text-orange-400 font-semibold text-sm text-right">100 â˜…</p>
        </div>
        <input className="border px-5 py-2 rounded-lg" placeholder="Search..." />
        <div>
          <h1 className="text-xl font-semibold">Iced Coffees</h1>
          <div className="flex flex-row gap-10 overflow-x-auto py-5">
            {[0,0,0,0,0,0].map((_v, i) => 
              <div key={i} className="text-center font-semibold flex flex-col gap-4 min-w-[30%]" onClick={() => showOrder("Iced Coffee")}>
                <div>
                  <Image src={circle} alt="Circle" />
                </div>
                <h1>Some item</h1>
              </div>
            )}
          </div>
        </div>
        <div>
          <h1 className="text-xl font-semibold">Smoothies</h1>
          <div className="flex flex-row gap-10 overflow-x-auto py-5">
            {[0,0,0,0,0,0].map((_v, i) => 
              <div key={i} className="text-center font-semibold flex flex-col gap-4 min-w-[30%]" onClick={() => showOrder("Smoothie")}>
                <div>
                  <Image src={circle} alt="Circle" />
                </div>
                <h1>Some item</h1>
              </div>
            )}
          </div>
        </div>
        <div className="h-16"></div>
        <div className="fixed bottom-0 left-0 right-0 grid grid-cols-3 gap-10 py-5 px-10 border-t font-semibold backdrop-blur-lg bg-white bg-opacity-70">
          <div className="text-blue-950 text-center">
            <LocalCafeIcon className="h-8 w-8" />
            <p>Order</p>
          </div>
          <div className="text-center text-gray-500" onClick={() => window.open("/rewards", "_self")}>
            <AutoAwesomeIcon className="h-8 w-8" />
            <p>Rewards</p>
          </div>
          <div className="text-center text-gray-500" onClick={() => window.open("/account", "_self")}>
            <AccountCircleIcon className="h-8 w-8" />
            <p>Account</p>
          </div>
        </div>
        {orderModalState && <div><div className="top-0 left-0 right-0 bottom-0 fixed bg-black bg-opacity-30 backdrop-blur-sm" onClick={() => closeOrder()}></div><div className="fixed w-full bottom-0 left-0 right-0 rounded-t-md" style={{marginTop: `${orderTop}px`}} ref={orderRef as React.RefObject<HTMLDivElement>} {...bind()}>
          <div className="relative bg-blue-950 w-full overflow-hidden rounded-t-md">
            <Image src={coffee} alt="Coffee" className="pt-2 -bottom-16 relative" />
            <div className="from-white to-transparent bg-gradient-to-t absolute top-0 bottom-0 w-full from-10% to-50%"></div>
            <div className="bg-white/50 rounded-full absolute top-7 left-10 right-10 h-1" />
          </div>
          <div className="p-5 bg-white -top-1 h-full relative w-full">
            <h1 className="text-2xl font-semibold">{orderType}</h1>
            <p className="font-semibold text-sm text-gray-400">$5.00</p>
            <label className="text-xs font-semibold mt-4 mb-2 block text-gray-600">Coupon</label>
            <Menu>
      <Menu.Button className="border w-full rounded-lg text-sm text-left px-4 py-2">More</Menu.Button>
      <Menu.Items className="absolute border rounded-md flex flex-col bg-white right-5 left-5 top-28">
        <Menu.Item>
          {({ active }) => (
            <p
              className={`${active && 'bg-gray-300'} px-4 py-2 font-semibold border-b text-sm`}
            >
              50% <span className="text-gray-400 font-normal">(2)</span>
            </p>
          )}
        </Menu.Item>
        <Menu.Item>
          {({ active }) => (
            <p
            className={`${active && 'bg-gray-300'} px-4 py-2 font-semibold border-b text-sm`}
          >
            25% <span className="text-gray-400 font-normal">(3)</span>
          </p>
          )}
        </Menu.Item>
        <Menu.Item>
          {({ active }) => (
            <p
            className={`${active && 'bg-gray-300'} px-4 py-2 border-b text-gray-400 text-sm`}
          >
            No coupon
          </p>
          )}
        </Menu.Item>
      </Menu.Items>
    </Menu>
          </div>
        </div></div>}
      </main>
    </>
  );
};

export default Home;